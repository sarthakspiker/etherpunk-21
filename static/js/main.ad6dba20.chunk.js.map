{"version":3,"sources":["../../node_modules/web3-eth-accounts/src sync","getWeb3.js","DashboardCard.js","Dashboard.js","Navbar.js","BookingCard.js","MyBookings.js","PropertyCard.js","MyProperties.js","App.js","serviceWorker.js","index.js","RegisterProperty.js","getIPFS.js","dstays2.png","Utils.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","getWeb3","Promise","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","SuperfluidSDK","require","DashboardCard","props","initiateSuperfluid","state","account","rent","sf","owner","propertyDetail","fDAIxTokenAddress_Rinkeby","convertDollarToDAI","DAIPerSecond","cfa","createFlow","superToken","sender","receiver","flowRate","toFixed","setState","transactionMessage","getNetFlow","toString","error","showLoadingBackdrop","showSuccessBackdrop","getETHAmount","securityDeposit","contract","methods","getLatestPriceMATIC","call","responseMATIC","dollarToMatic","totalSecurityMaticDec","rentProperty","propertyId","checkInDate","checkOutDate","availableFrom","alert","checkInDateEpoch","Date","getTime","checkOutDateEpoch","availableFromEpoch","bookProperty","checkBalance","loadingMessage","securityDepositETHCurrent","send","from","gasPrice","utils","toWei","gas","value","response","transactionHash","dollarAmt","getLatestPriceDAI","responseDAI","DAI","bookPropertyHandle","securityDepositETH","refreshPage","location","reload","checkinDate","checkoutDate","Framework","tokens","initialize","fDAIx","balanceOf","description","split","area","flatType","furnishing","imageURL","getDateFromEpoch","getFlatType","getFurnishing","address","contact","className","this","src","alt","href","onClick","Modal","show","backdrop","keyboard","aria-labelledby","centered","Header","closeButton","Title","Body","htmlFor","type","onChange","target","required","Footer","Button","variant","role","onHide","Component","Dashboard","getAllProperties","getProperties","data","filter","item","allProperties","length","map","key","Navbar","to","logo","data-toggle","data-target","aria-controls","aria-expanded","aria-label","BookingCard","property","imageURLs","imagesHash","startDate","endDate","style","textAlign","width","MyBookings","getMyBookings","mergedResult","reduce","b","c","i","Object","assign","filteredMergedResult","myBookings","PropertyCard","cancelFLow","deleteFlow","tenant","by","returnDeposit","totalSecurityMatic","cancelBooking","propId","activateProperty","markPropertyAsActive","deActivateProperty","markPropertyAsInactive","checkData","eth","getPastLogs","fromBlock","toBlock","then","catch","showCancelButton","isBooked","showActivateButton","isActive","showDeactivateButton","hidden","MyProperties","getMyProperies","getMyProperties","myProperties","bookings","App","storageValue","accounts","componentDidMount","getAccounts","net","getId","networkId","deployedNetwork","PropertyRental","networks","instance","Contract","abi","on","runExample","getProperies","path","exact","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","RegisterProperty","setInitialState","deposit","selectedFiles","selectedFilesIPFSPath","fileHashString","ownerContact","ipfsClient","loadingBackdropTitle","onFileSelection","allFiles","files","file","reader","FileReader","readAsArrayBuffer","onloadend","newImage","buffer","Buffer","result","validatePhone","validator","isMobilePhone","setCustomValidity","handleSubmit","preventDefault","uploadAllFiles","uploadFileToIPFS","val","allHashPromises","all","allHashes","saveContract","IPFS","add","results","date","rentOutproperty","join","onSubmit","disabled","rows","overflow","resize","min","multiple","accept","URL","createObjectURL","ipfs","host","port","protocol","epoch","undefined","newDate","setUTCMilliseconds","toDateString","monthDiff","checkOut","checkIn","months","d1","d2","getFullYear","getMonth"],"mappings":"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","file":"static/js/main.ad6dba20.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1462;","import Web3 from \"web3\";\r\n\r\nconst getWeb3 = () =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(\"load\", async () => {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          // Acccounts now exposed\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"http://127.0.0.1:8545\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n\r\nexport default getWeb3;\r\n","import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { getFurnishing, getDateFromEpoch, getFlatType, monthDiff } from './Utils';\r\nconst SuperfluidSDK = require(\"@superfluid-finance/js-sdk\");\r\n\r\nexport default class DashboardCard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        const description = this.props.propertyDetail['propertyDescription'].split(';');\r\n        const area = this.props.propertyDetail['area'];\r\n        const availableFrom = this.props.propertyDetail['availableFrom'];\r\n        const flatType = this.props.propertyDetail['flatType'];\r\n        const furnishing = this.props.propertyDetail['furnishing'];\r\n        const rent = this.props.propertyDetail['rent'];\r\n        const securityDeposit = this.props.propertyDetail['securityDeposit'];\r\n        const imageURL = this.props.propertyDetail['imagesHash'].split(',')[0];\r\n        const propertyId = this.props.propertyDetail['propId'];\r\n\r\n        this.state = {\r\n            area: area,\r\n            availableFrom: getDateFromEpoch(availableFrom),\r\n            flatType: getFlatType(flatType),\r\n            furnishing: getFurnishing(furnishing),\r\n            rent: rent,\r\n            securityDeposit: securityDeposit,\r\n            securityDepositETH: 0,\r\n            address: description[0],\r\n            contact: description[1],\r\n            imageURL: imageURL,\r\n            propertyId: propertyId,\r\n            contract: this.props.contract,\r\n            account: this.props.account,\r\n            bookProperty: false,\r\n            showLoadingBackdrop: false,\r\n            showSuccessBackdrop: false,\r\n            checkInDate: \"\",\r\n            checkOutDate: \"\",\r\n            transactionMessage: \"\",\r\n            loadingMessage: \"Booking...\",\r\n            sf: null\r\n        }\r\n\r\n        // console.log(props.propertyDetail);\r\n    }\r\n\r\n    initiateSuperfluid = async () => {\r\n        const { account, rent, sf } = this.state;\r\n        const { owner } = this.props.propertyDetail;\r\n\r\n        const fDAIxTokenAddress_Rinkeby = '0x745861AeD1EEe363b4AaA5F1994Be40b1e05Ff90';\r\n        try {\r\n            const DAIPerSecond = await this.convertDollarToDAI(rent);\r\n\r\n            await sf.cfa.createFlow({\r\n                superToken: fDAIxTokenAddress_Rinkeby,\r\n                sender: account,\r\n                receiver: owner,\r\n                flowRate: DAIPerSecond.toFixed(0)\r\n            });\r\n\r\n            //console.log(sf);\r\n\r\n            this.setState({ transactionMessage: `${this.state.transactionMessage} \\n Your superfluid flow has started. Check https://superfluid.finance/` });\r\n\r\n            const flowDeductions = (await sf.cfa.getNetFlow({ superToken: fDAIxTokenAddress_Rinkeby, account: account })).toString();\r\n            //console.log(flowDeductions);\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n        this.setState({\r\n            showLoadingBackdrop: false,\r\n            showSuccessBackdrop: true\r\n        });\r\n    }\r\n\r\n    getETHAmount = async (securityDeposit, contract) => {\r\n        const responseMATIC = await contract.methods.getLatestPriceMATIC().call();\r\n        const dollarToMatic = responseMATIC;\r\n        const totalSecurityMaticDec = ((securityDeposit * 10 ** 26) / dollarToMatic);\r\n        return totalSecurityMaticDec.toFixed(0);\r\n    }\r\n\r\n    rentProperty = async () => {\r\n        const { account, contract, propertyId, checkInDate, checkOutDate, availableFrom, securityDeposit } = this.state;\r\n        const { web3 } = this.props;\r\n\r\n        if (checkInDate === \"\" || checkOutDate === \"\" || checkInDate > checkOutDate) {\r\n            alert(\"Check-out date must be after Check-in date\");\r\n            return;\r\n        }\r\n\r\n        const checkInDateEpoch = new Date(checkInDate).getTime();\r\n        const checkOutDateEpoch = new Date(checkOutDate).getTime();\r\n        const availableFromEpoch = new Date(availableFrom).getTime();\r\n\r\n        if (checkInDateEpoch < availableFromEpoch - 1) {\r\n            alert(\"Check-in date must be after Available date\");\r\n            return;\r\n        }\r\n\r\n        this.setState({ bookProperty: false, showLoadingBackdrop: true });\r\n\r\n        if (!(await this.checkBalance(checkInDate, checkOutDate))) {\r\n            this.setState({\r\n                transactionMessage: `Failed, Not enough DAI Balance!`,\r\n            });\r\n            return;\r\n        }\r\n        this.setState({ loadingMessage: \"Booking...\" });\r\n        // return;\r\n\r\n        try {\r\n            // contract.methods.rentProperty.estimateGas({ from: account })\r\n            //     .then(function (gasAmount) {\r\n            //         console.log(`Estimation: ${gasAmount}`);\r\n            //     })\r\n            //     .catch(function (error) {\r\n            //         console.error(error);\r\n            //     });\r\n\r\n            const securityDepositETHCurrent = await this.getETHAmount(securityDeposit, this.props.contract);\r\n            // Sending security amount to owner\r\n            const response = await contract.methods.rentProperty(\r\n                propertyId, checkInDateEpoch, checkOutDateEpoch\r\n            )\r\n                .send({\r\n                    from: account,\r\n                    gasPrice: web3.utils.toWei(\"3\", 'gwei'),\r\n                    gas: 210000,\r\n                    value: web3.utils.toWei(securityDepositETHCurrent.toString(), 'wei')\r\n                });\r\n\r\n            // console.log(response);\r\n            // console.log(this.state);\r\n            this.setState({ transactionMessage: `Success! \\n  Deposit-TxHash:${response.transactionHash} \\n`, loadingMessage: 'Initiating Superfluid Rent flow.' });\r\n            await this.initiateSuperfluid();\r\n\r\n        } catch (error) {\r\n            this.setState({ transactionMessage: `Failed!` });\r\n            console.error(error);\r\n        }\r\n        this.setState({\r\n            showLoadingBackdrop: false,\r\n            showSuccessBackdrop: true\r\n        });\r\n    }\r\n\r\n    // Chainlink call for converting Dollat to Matic using priceFeed\r\n    convertDollarToDAI = async (dollarAmt) => {\r\n        const { contract } = this.state;\r\n        const responseDAI = await contract.methods.getLatestPriceDAI().call();\r\n        const DAI = (dollarAmt * 10 ** 8) / responseDAI;\r\n        return (DAI * 10 ** 18) / (3600 * 24 * 30);\r\n    }\r\n\r\n    bookPropertyHandle = async () => {\r\n        let securityDepositETH = await this.getETHAmount(this.state.securityDeposit, this.props.contract);\r\n        this.setState({ bookProperty: true, securityDepositETH: securityDepositETH });\r\n        // console.log(this.state);\r\n    }\r\n\r\n    refreshPage = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    checkBalance = async (checkinDate, checkoutDate) => {\r\n        const { web3 } = this.props;\r\n        const { rent } = this.props.propertyDetail;\r\n        const { account } = this.state;\r\n\r\n        this.setState({\r\n            loadingMessage: \"Checking DAI Balance in Superfluid Wallet\"\r\n        });\r\n\r\n        try {\r\n            const sf = new SuperfluidSDK.Framework({\r\n                web3: this.props.web3,\r\n                tokens: [\"fDAI\"]\r\n            });\r\n            await sf.initialize();\r\n\r\n            let currentBalance = (await sf.tokens.fDAIx.balanceOf.call(account)).toString() / 1e18;\r\n\r\n            // let monDif = monthDiff(getDateFromEpoch(checkoutDate), getDateFromEpoch(checkinDate));\r\n            // console.log(monDif);\r\n\r\n            if (currentBalance < rent) {\r\n                return false;\r\n            }\r\n\r\n            this.setState({\r\n                sf: sf\r\n            });\r\n\r\n            return true;\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Property w-100 p-2\">\r\n                <div className=\"card card-product-list bg-light mb-3\">\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-md-3 p-3 align-middle\">\r\n                            {this.state.imageURL !== \"\" ?\r\n                                <img src={`https://ipfs.io/ipfs/${this.state.imageURL}`} className=\"img-thumbnail rounded mx-auto d-block\" alt=\"...\" />\r\n                                : <span className=\"rent h6\">No images</span>\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-md-6 p-2\">\r\n                            <div className=\"info-main\">\r\n                                <div className=\"h3 title property-title\"> {this.state.flatType} - {this.state.furnishing} </div>\r\n                                <dl className=\"row property-description\">\r\n                                    <dt className=\"col-sm-3\">Address</dt>\r\n                                    <dd className=\"col-sm-9\">{this.state.address}</dd>\r\n\r\n                                    <dt className=\"col-sm-3\">Area</dt>\r\n                                    <dd className=\"col-sm-9\">{this.state.area} sqft.</dd>\r\n\r\n                                    <dt className=\"col-sm-3\">Schedule Visit</dt>\r\n                                    <dd className=\"col-sm-9\"><a href={`tel:${this.state.contact}`} className=\"text-decoration-none link-info\">{this.state.contact}</a></dd>\r\n                                </dl>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-3 p-2\">\r\n                            <div className=\"info-aside\">\r\n                                <div className=\"price-wrap\">\r\n                                    <span className=\"rent h5 text-end\">Rent: $ {this.state.rent} </span>\r\n                                    <br />\r\n                                    <span className=\"rent h5\">Security: $ {this.state.securityDeposit} </span>\r\n                                </div>\r\n                                <br />\r\n                                <p>\r\n                                    <button className=\"btn btn-primary btn-block\"\r\n                                        onClick={this.bookPropertyHandle}\r\n                                    > Details </button>\r\n                                </p>\r\n                                <p>\r\n                                    Available from: <span className=\"rent h6\"> {this.state.availableFrom} </span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal\r\n                    show={this.state.bookProperty}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col-md-6 mb-3\">\r\n                                <label htmlFor=\"inputDOB\">Check-in Date</label>\r\n                                <input type=\"date\" className=\"form-control\"\r\n                                    value={this.state.checkInDate} onChange={(e) => { this.setState({ checkInDate: e.target.value }) }}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-6 mb-3\">\r\n                                <label htmlFor=\"inputDOB\">Check-out Date</label>\r\n                                <input type=\"date\" className=\"form-control\"\r\n                                    value={this.state.checkOutDate} onChange={(e) => { this.setState({ checkOutDate: e.target.value }) }}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col\">\r\n                                <h3><span className=\"badge bg-info\">ETH {this.state.securityDepositETH / 10 ** 18} + Gas Fee</span></h3>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.setState({ bookProperty: false })}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.rentProperty}>\r\n                            Book\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    show={this.state.showLoadingBackdrop}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{this.state.loadingMessage}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <div className=\"spinner-grow\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    show={this.state.showSuccessBackdrop}\r\n                    onHide={this.refreshPage}\r\n                    centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Message </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {this.state.transactionMessage}\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Property from './DashboardCard';\r\n\r\nexport class Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            contract: this.props.contract,\r\n            account: this.props.account,\r\n            allProperties: []\r\n        }\r\n    }\r\n\r\n    getAllProperties = async () => {\r\n        const { account, contract } = this.state;\r\n\r\n        const response = await contract.methods.getProperties(0).call();\r\n        const data = response[0].filter(item => item.owner !== \"0x0000000000000000000000000000000000000000\");\r\n        //console.log(response);\r\n        this.setState({ allProperties: data });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllProperties();\r\n    }\r\n\r\n    render() {\r\n        const { allProperties } = this.state;\r\n        return (\r\n            <div className=\"Dashboard\">\r\n                <div className=\"jumbotron jumbotron-fluid bg-transparent m-0\">\r\n                    <div className=\"container container-fluid p-5\">\r\n                        <header className=\"section-heading\">\r\n                            <h1 className=\"section-title text-center\">Catalog</h1>\r\n                        </header>\r\n                        <div className=\"container container-fluid p-5\">\r\n                            <div className=\"list-group mx-auto\">\r\n                                {\r\n                                    // console.log(this.state.allProperties)\r\n                                    allProperties.length > 0 ?\r\n                                        allProperties.map((item, key) => {\r\n                                            return <Property key={key} propertyDetail={item} account={this.state.account} contract={this.state.contract} web3={this.props.web3} />\r\n                                        })\r\n                                        : null\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from './dstays2.png';\r\n\r\nexport default class Navbar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav\r\n                className=\"navbar navbar-expand-lg fixed-top navbar-dark shadow-lg\"\r\n            >\r\n                <Link className=\"navbar-brand navbar-nav\" to=\"/\">\r\n                    <img src={logo} />\r\n                </Link>\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#navbarTogglerDemo02\"\r\n                    aria-controls=\"navbarTogglerDemo02\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n                    <ul className=\"navbar-nav mr-auto\"></ul>\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item active\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\r\n                            <Link className=\"nav-link\" to=\"/\"><h5>Dashboard</h5></Link>\r\n                        </li>\r\n                        <li className=\"nav-item active\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\r\n                            <Link className=\"nav-link\" to=\"/property\"><h5>Rent Out</h5></Link>\r\n                        </li>\r\n                        <li className=\"nav-item active\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\r\n                            <Link className=\"nav-link\" to=\"/bookings\"><h5>My Bookings</h5></Link>\r\n                        </li>\r\n                        <li className=\"nav-item active\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\r\n                            <Link className=\"nav-link\" to=\"/properties\"><h5>My Properties</h5></Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { getFurnishing, getDateFromEpoch, getFlatType } from './Utils';\r\nconst SuperfluidSDK = require(\"@superfluid-finance/js-sdk\");\r\n\r\nexport default class BookingCard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        const property = this.props.propertyDetail;\r\n\r\n        const imageURLs = property.imagesHash !== \"\" ? property.imagesHash.split(\",\") : [];\r\n        const description = property['propertyDescription'].split(';');\r\n        // console.log(this.props.propertyDetail);\r\n        this.state = {\r\n            imageURLs: imageURLs,\r\n            contact: description[1],\r\n            address: description[0],\r\n            startDate: getDateFromEpoch(property.checkInDate),\r\n            endDate: getDateFromEpoch(property.checkoutDate),\r\n            property: property,\r\n            contract: this.props.contract,\r\n            account: this.props.account,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.state.imageURLs);\r\n        return (\r\n            <div className=\"booking w-100 p-2\" style={{ textAlign: '-webkit-center' }}>\r\n                <div className=\"card\" style={{ width: '60%' }}>\r\n                    {this.state.imageURLs.length > 0 ? <img className=\"card-img-top\" src={`https://ipfs.io/ipfs/${this.state.imageURLs[0]}`} alt=\"Prop image\" />\r\n                        : <img className=\"card-img-top\" src=\"https://ipfs.io/ipfs/Qmdg4hnwMimppNT3XhyABLf4UrCWgfiw9YvMC6TH1Jmr2m\" alt=\"Prop image\" />}\r\n                    <div className=\"card-body\">\r\n                        {/* <h5 className=\"card-title lead\">PropertyId: {this.state.property.propId}</h5> */}\r\n                        <h3 className=\"text-muted card-text\">{this.state.address}</h3>\r\n                        <div className=\"info-main\">\r\n                            <dl className=\"row property-description\">\r\n                                <dt className=\"col-sm-4\">Start Date</dt>\r\n                                <dd className=\"col-sm-8\">{this.state.startDate}</dd>\r\n\r\n                                <dt className=\"col-sm-4\">End Date</dt>\r\n                                <dd className=\"col-sm-8\">{this.state.endDate}</dd>\r\n\r\n                                <dt className=\"col-sm-4\">Owner contact</dt>\r\n                                <dd className=\"col-sm-8\">{this.state.contact} </dd>\r\n\r\n                                <dt className=\"col-sm-4\">Security Deposit</dt>\r\n                                <dd className=\"col-sm-8\">${this.state.property.securityDeposit} </dd>\r\n\r\n                                <dt className=\"col-sm-4\">Rent</dt>\r\n                                <dd className=\"col-sm-8\">${this.state.property.rent} </dd>\r\n                            </dl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Booking from './BookingCard';\r\n\r\nexport default class MyBookings extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            contract: this.props.contract,\r\n            account: this.props.account,\r\n            myBookings: []\r\n        }\r\n    }\r\n\r\n    getMyBookings = async () => {\r\n        const { account, contract } = this.state;\r\n        try {\r\n            const response = await contract.methods.getMyBookings(0, account).call();\r\n            const mergedResult = [response[0], response[1]].reduce((a, b) => a.map((c, i) => Object.assign({}, c, b[i])));\r\n            const filteredMergedResult = mergedResult.filter(item => item.owner !== \"0x0000000000000000000000000000000000000000\");\r\n            // console.log(properties, bookings);\r\n            // console.log(mergedResult);\r\n            this.setState({ myBookings: filteredMergedResult });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getMyBookings();\r\n    }\r\n\r\n    render() {\r\n        const { myBookings } = this.state;\r\n        return (\r\n            <div className=\"my-bookings\">\r\n                <div className=\"jumbotron jumbotron-fluid bg-transparent m-0\">\r\n                    <div className=\"container container-fluid p-5\">\r\n                        <header className=\"section-heading\">\r\n                            <h1 className=\"section-title text-center\">My Bookings</h1>\r\n                        </header>\r\n                        <div className=\"container container-fluid p-5\">\r\n                            {\r\n                                myBookings.length > 0 ?\r\n                                    myBookings.map((item, key) => {\r\n                                        return <Booking key={key} propertyDetail={item} contract={this.state.contract} account={this.state.account} web3={this.props.web3} />\r\n                                    })\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { getFurnishing, getDateFromEpoch, getFlatType } from './Utils';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport config from './config.json';\r\nconst SuperfluidSDK = require(\"@superfluid-finance/js-sdk\");\r\n\r\nexport default class PropertyCard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        const property = this.props.propertyDetail;\r\n        // console.log(property);\r\n        const imageURLs = property.imagesHash !== \"\" ? property.imagesHash.split(\",\") : [];\r\n        const description = property['propertyDescription'].split(';');\r\n        this.state = {\r\n            imageURLs: imageURLs,\r\n            contact: description[1],\r\n            address: description[0],\r\n            startDate: property.checkInDate !== \"0\" ? getDateFromEpoch(property.checkInDate) : \"\",\r\n            endDate: property.checkoutDate !== \"0\" ? getDateFromEpoch(property.checkoutDate) : \"\",\r\n            property: property,\r\n            contract: this.props.contract,\r\n            account: this.props.account,\r\n            showLoadingBackdrop: false,\r\n            showSuccessBackdrop: false,\r\n            transactionMessage: \"\",\r\n            showCancelButton: !property.isBooked,\r\n            showActivateButton: property.isActive,\r\n            showDeactivateButton: !property.isActive,\r\n            tenant: property.tenant !== \"0x0000000000000000000000000000000000000000\" ? property.tenant : \"\"\r\n        }\r\n    }\r\n    cancelFLow = async () => {\r\n        const { property, account, contact } = this.state;\r\n        const { web3 } = this.props;\r\n\r\n        // this.setState({ showLoadingBackdrop: true });\r\n\r\n        const fDAIxTokenAddress_Rinkeby = '0x745861AeD1EEe363b4AaA5F1994Be40b1e05Ff90';\r\n        try {\r\n\r\n            const sf = new SuperfluidSDK.Framework({\r\n                web3: web3\r\n            });\r\n            await sf.initialize();\r\n\r\n            await sf.cfa.deleteFlow({\r\n                superToken: fDAIxTokenAddress_Rinkeby,\r\n                sender: property.tenant,\r\n                receiver: property.owner,\r\n                by: property.owner\r\n            });\r\n\r\n            this.setState({\r\n                transactionMessage: `${this.state.transactionMessage} \\n You are not paying rent anymore. Check with SuperFluid Dashboard.`\r\n            });\r\n            // console.log(sf);\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n        this.setState({\r\n            showLoadingBackdrop: false,\r\n            showSuccessBackdrop: true\r\n        });\r\n    }\r\n    returnDeposit = async () => {\r\n        const { account, contract, property } = this.state;\r\n        const { web3 } = this.props;\r\n\r\n        this.setState({ showLoadingBackdrop: true });\r\n        // console.log(property);\r\n        try {\r\n            const responseMATIC = await contract.methods.getLatestPriceMATIC().call();\r\n            const dollarToMatic = responseMATIC;\r\n            const totalSecurityMaticDec = ((property.securityDeposit * 10 ** 26) / dollarToMatic);\r\n            const totalSecurityMatic = totalSecurityMaticDec.toFixed(0);\r\n\r\n            const response = await contract.methods.cancelBooking(\r\n                property.propId\r\n            )\r\n                .send({\r\n                    from: property.owner,\r\n                    gasPrice: web3.utils.toWei(\"3\", 'gwei'),\r\n                    gas: 210000,\r\n                    value: web3.utils.toWei(totalSecurityMatic.toString(), 'wei')\r\n                });\r\n            this.setState({ transactionMessage: `Success! \\n  Deposit-TxHash:${response.transactionHash} \\n` });\r\n            //console.log(response);\r\n            this.cancelFLow();\r\n        } catch (error) {\r\n            this.setState({\r\n                transactionMessage: `Failed!`,\r\n                showLoadingBackdrop: false,\r\n                showSuccessBackdrop: true\r\n            });\r\n            console.error(error);\r\n        }\r\n        // this.setState({\r\n        //     showLoadingBackdrop: false,\r\n        //     showSuccessBackdrop: true\r\n        // });\r\n    }\r\n\r\n    activateProperty = async () => {\r\n        const { contract, property } = this.state;\r\n\r\n        this.setState({ showLoadingBackdrop: true });\r\n        try {\r\n            const response = await contract.methods.markPropertyAsActive(\r\n                property.propId\r\n            )\r\n                .send({\r\n                    from: property.owner\r\n                });\r\n            this.setState({ transactionMessage: `Success! \\n  Deposit-TxHash:${response.transactionHash} \\n` });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n        this.setState({\r\n            showLoadingBackdrop: false,\r\n            showSuccessBackdrop: true\r\n        });\r\n    }\r\n\r\n    deActivateProperty = async () => {\r\n        const { contract, property } = this.state;\r\n\r\n        this.setState({ showLoadingBackdrop: true });\r\n        try {\r\n            const response = await contract.methods.markPropertyAsInactive(\r\n                property.propId\r\n            )\r\n                .send({\r\n                    from: property.owner\r\n                });\r\n            this.setState({ transactionMessage: `Success! \\n  Deposit-TxHash:${response.transactionHash} \\n` });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n        this.setState({\r\n            showLoadingBackdrop: false,\r\n            showSuccessBackdrop: true\r\n        });\r\n    }\r\n\r\n    refreshPage = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    checkData = async () => {\r\n        const { property } = this.state;\r\n        const fDAIxTokenAddress_Rinkeby = '0x745861AeD1EEe363b4AaA5F1994Be40b1e05Ff90';\r\n        const { web3 } = this.props;\r\n        const sf = new SuperfluidSDK.Framework({\r\n            web3: web3,\r\n            tokens: [\"fDAI\"]\r\n        });\r\n        await sf.initialize();\r\n        // console.log(sf.tokens);\r\n        let daix = sf.tokens.fDAIx;\r\n        console.log(\"***********************\");\r\n        // console.log(await sf.cfa.listFlows({ superToken: fDAIxTokenAddress_Rinkeby, account: '0x8f231D5F3622E6c7b9c4aF00156C15AbCC3F1061' }));\r\n        console.log((await sf.tokens.fDAIx.balanceOf.call('0x8f231D5F3622E6c7b9c4aF00156C15AbCC3F1061')).toString() / 1e18);\r\n        console.log(\"***********************\");\r\n        web3.eth.getPastLogs(\r\n            {\r\n                address: \"0x8f231D5F3622E6c7b9c4aF00156C15AbCC3F1061\",\r\n                fromBlock: \"0x1\",\r\n                toBlock: 'latest'\r\n            })\r\n            .then(console.log)\r\n            .catch(e => console.log(e));\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.checkData();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"booking col-sm-6\" >\r\n                <div className=\"card\">\r\n                    {this.state.imageURLs.length > 0 ? <img className=\"card-img-top\" src={`https://ipfs.io/ipfs/${this.state.imageURLs[0]}`} alt=\"Prop image\" />\r\n                        : <img className=\"card-img-top\" src=\"https://ipfs.io/ipfs/Qmdg4hnwMimppNT3XhyABLf4UrCWgfiw9YvMC6TH1Jmr2m\" alt=\"Prop image\" />}\r\n                    <div className=\"card-body\">\r\n                        {/* <h5 className=\"card-title lead\">PropertyId: {this.state.property.propId}</h5> */}\r\n                        <h3 className=\"text-muted card-text\">{this.state.address}</h3>\r\n                        <div className=\"info-main\">\r\n                            <dl className=\"row property-description\">\r\n                                <dt className=\"col-sm-5\">Booked</dt>\r\n                                <dd className=\"col-sm-5\">{this.state.property.isBooked ? \"Yes\" : \"No\"}</dd>\r\n                                <div className=\"border-top\" />\r\n\r\n                                <dt className=\"col-sm-5\">Tenant Address</dt>\r\n                                <dd className=\"col-sm-5\">{this.state.tenant}</dd>\r\n\r\n                                <dt className=\"col-sm-5\">Start Date</dt>\r\n                                <dd className=\"col-sm-5\">{this.state.startDate}</dd>\r\n\r\n                                <dt className=\"col-sm-5\">End Date</dt>\r\n                                <dd className=\"col-sm-5\">{this.state.endDate}</dd>\r\n\r\n                                <dt className=\"col-sm-5\">Owner contact</dt>\r\n                                <dd className=\"col-sm-5\">{this.state.contact} </dd>\r\n\r\n                                <dt className=\"col-sm-5\">Security Deposit</dt>\r\n                                <dd className=\"col-sm-5\">{this.state.property.securityDeposit} </dd>\r\n\r\n                                <dt className=\"col-sm-5\">Rent</dt>\r\n                                <dd className=\"col-sm-5\">{this.state.property.rent} </dd>\r\n                            </dl>\r\n                        </div>\r\n                    </div>\r\n                    <button hidden={this.state.showCancelButton} onClick={this.returnDeposit} className=\"btn btn-danger\">Cancel Booking</button>\r\n                    {/* <br /> */}\r\n                    <button hidden={(this.state.showActivateButton || !this.state.showCancelButton)} onClick={this.activateProperty} className=\"btn btn-primary\">Activate</button>\r\n                    <button hidden={(this.state.showDeactivateButton || !this.state.showCancelButton)} onClick={this.deActivateProperty} className=\"btn btn-danger\">Deactivate</button>\r\n                    {/* <div dangerouslySetInnerHTML={{ __html: \"<iframe src='https://app.superfluid.finance/streams/goerli/0xfc598fba68f46e8b5d7125a841f2afb9dc7863f7419fe57ca3801a955ccd0626' scrolling='no' frameborder='0' />\" }} /> */}\r\n                    {/* <div dangerouslySetInnerHTML={{ __html: \"<iframe src='https://app.superfluid.finance/streams/rinkeby/0x263d71a23f9127f3f564f1b67c58ecfc390a14edc62151a34b0e2b60b66e98fe' />\"}} /> */}\r\n                </div>\r\n                <Modal\r\n                    show={this.state.showLoadingBackdrop}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Updating Property Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <div className=\"spinner-grow\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    show={this.state.showSuccessBackdrop}\r\n                    onHide={this.refreshPage}\r\n                    centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Message </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {this.state.transactionMessage}\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Property from './PropertyCard';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nexport default class MyProperties extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            contract: this.props.contract,\r\n            account: this.props.account,\r\n            myProperties: [],\r\n            bookings: []\r\n        }\r\n    }\r\n\r\n    getMyProperies = async () => {\r\n\r\n        const { account, contract } = this.state;\r\n        try {\r\n            const response = await contract.methods.getMyProperties(0, account).call();\r\n            const mergedResult = [response[0], response[1]].reduce((a, b) => a.map((c, i) => Object.assign({}, c, b[i])));\r\n            const filteredMergedResult = mergedResult.filter(item => item.owner !== \"0x0000000000000000000000000000000000000000\");\r\n            this.setState({ myProperties: filteredMergedResult });\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getMyProperies();\r\n    }\r\n\r\n    render() {\r\n        const { myProperties } = this.state;\r\n        return (\r\n            <div className=\"my-properties\">\r\n                <div className=\"jumbotron jumbotron-fluid bg-transparent m-0\">\r\n                    <div className=\"container container-fluid p-5\">\r\n                        <header className=\"section-heading\">\r\n                            <h1 className=\"section-title text-center\">My Properties</h1>\r\n                        </header>\r\n                        <div className=\"container container-fluid p-5\">\r\n                            <div className=\"row\">\r\n                                {\r\n                                    myProperties.length > 0 ?\r\n                                        myProperties.map((item, key) => {\r\n                                            return <Property key={key} propertyDetail={item} contract={this.state.contract} account={this.state.account} web3={this.props.web3} />\r\n                                        })\r\n                                        : null\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport PropertyRental from \"./contracts/PropertyRental.json\";\r\nimport getWeb3 from \"./getWeb3\";\r\nimport config from './config.json';\r\n\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\n\r\nimport {\r\n  // BrowserRouter as Router,\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n\r\nimport Dashboard from './Dashboard';\r\nimport Register from './RegisterProperty'\r\nimport Navbar from \"./Navbar\";\r\nimport MyBookings from './MyBookings';\r\nimport MyProperties from './MyProperties';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    storageValue: 0,\r\n    web3: null,\r\n    accounts: null,\r\n    contract: null,\r\n    transactionHash: 'No transactions yet'\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n\r\n      // Get network provider and web3 instance.\r\n      const web3 = await getWeb3();\r\n\r\n      // Use web3 to get the user's accounts.\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      // Get the contract instance.\r\n      const networkId = await web3.eth.net.getId();\r\n\r\n      const deployedNetwork = PropertyRental.networks[networkId];\r\n      const instance = new web3.eth.Contract(\r\n        PropertyRental.abi,\r\n        deployedNetwork && deployedNetwork.address,\r\n      );\r\n\r\n      // Set web3, accounts, and contract to the state, and then proceed with an\r\n      // example of interacting with the contract's methods.\r\n      this.setState(\r\n        {\r\n          web3, accounts, contract: instance\r\n        }\r\n        // , this.runExample\r\n      );\r\n\r\n      window.ethereum.on('accountsChanged', (accounts) => {\r\n        window.location.reload();\r\n      })\r\n\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`,\r\n      );\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  runExample = async () => {\r\n    const { accounts, contract } = this.state;\r\n\r\n    // Stores a given value, 5 by default.\r\n    // const request = await contract.methods.rentOutproperty(\r\n    //   '3500 Deer Creek Road Palo Alto, CA 94304;8507783427',\r\n    //   1234, 1, 1613073764999, 0, 4500, 10000).send({ from: accounts[0] });\r\n\r\n    // console.log(request);\r\n\r\n    // Get the value from the contract to prove it worked.\r\n    const response = await contract.methods.getProperies().call();\r\n    console.log('Response', response);\r\n\r\n    // Update state with the result.\r\n    this.setState({ storageValue: response });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.web3) {\r\n      return <div>Loading Web3, accounts, and contract...</div>;\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Navbar />\r\n          <Route path=\"/\" exact render={\r\n            (props) => <Dashboard {...props} contract={this.state.contract} account={this.state.accounts[0]} web3={this.state.web3} />\r\n          } />\r\n          <Route path=\"/property\" exact render={\r\n            (props) => <Register {...props} contract={this.state.contract} account={this.state.accounts[0]} web3={this.state.web3} />\r\n          } />\r\n          <Route path=\"/bookings\" exact render={\r\n            (props) => <MyBookings {...props} contract={this.state.contract} account={this.state.accounts[0]} web3={this.state.web3} />\r\n          } />\r\n          <Route path=\"/properties\" exact render={\r\n            (props) => <MyProperties {...props} contract={this.state.contract} account={this.state.accounts[0]} web3={this.state.web3} />\r\n          } />\r\n        </Router>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Component } from 'react';\r\nimport validator from 'validator';\r\nimport IPFS from './getIPFS';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nexport default class RegisterProperty extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            flatType: \"\",\r\n            furnishing: \"\",\r\n            area: \"\",\r\n            address: \"\",\r\n            availableFrom: \"\",\r\n            rent: \"\",\r\n            deposit: \"\",\r\n            selectedFiles: [],\r\n            selectedFilesIPFSPath: [],\r\n            fileHashString: \"\",\r\n            ownerContact: \"\",\r\n            ipfsClient: this.props.ipfsClient,\r\n            contract: this.props.contract,\r\n            account: this.props.account,\r\n            showLoadingBackdrop: false,\r\n            loadingBackdropTitle: \"Saving File...\",\r\n            showSuccessBackdrop: false,\r\n            transactionMessage: \"\"\r\n        }\r\n    }\r\n\r\n    setInitialState = () => {\r\n\r\n        this.setState({\r\n            flatType: \"\",\r\n            furnishing: \"\",\r\n            area: \"\",\r\n            address: \"\",\r\n            availableFrom: \"\",\r\n            rent: \"\",\r\n            deposit: \"\",\r\n            selectedFiles: [],\r\n            selectedFilesIPFSPath: [],\r\n            fileHashString: \"\",\r\n            ownerContact: \"\",\r\n            ipfsClient: this.props.ipfsClient,\r\n            contract: this.props.contract,\r\n            account: this.props.account,\r\n            loadingBackdropTitle: \"Saving File...\",\r\n            showLoadingBackdrop: false,\r\n            showSuccessBackdrop: true,\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    onFileSelection = (e) => {\r\n        const allFiles = e.target.files;\r\n        this.setState({ selectedFiles: [] });\r\n\r\n        for (const property in allFiles) {\r\n            if (typeof (allFiles[property]) !== 'object') continue;\r\n\r\n            let file = allFiles[property];\r\n            try {\r\n                const reader = new FileReader();\r\n\r\n                reader.readAsArrayBuffer(file);\r\n                reader.onloadend = () => {\r\n                    const newImage = {\r\n                        file: file,\r\n                        buffer: Buffer(reader.result)\r\n                    }\r\n                    this.setState({ selectedFiles: [...this.state.selectedFiles, newImage] });\r\n                }\r\n            } catch (error) {\r\n                console.error('File Error');\r\n            }\r\n        }\r\n    }\r\n\r\n    getFlatType = (flatType) => {\r\n        if (flatType === \"1RK\") {\r\n            return 0;\r\n        }\r\n        else if (flatType === \"1BHK\") {\r\n            return 1;\r\n        }\r\n        else if (flatType === \"2BHK\") {\r\n            return 2;\r\n        }\r\n        else if (flatType === \"3BHK\") {\r\n            return 3;\r\n        }\r\n    }\r\n\r\n    getFurnishing = (furnishing) => {\r\n        if (furnishing === \"None\") {\r\n            return 0;\r\n        }\r\n        else if (furnishing === \"SemiFurnished\") {\r\n            return 1;\r\n        }\r\n        else if (furnishing === \"FullyFurnished\") {\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    validatePhone = (e) => {\r\n        if (!validator.isMobilePhone(e.target.value)) {\r\n            e.target.setCustomValidity(\"Invalid Phone Number\");\r\n        } else {\r\n            e.target.setCustomValidity(\"\");\r\n        }\r\n        this.setState({ ownerContact: e.target.value });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ showLoadingBackdrop: true });\r\n        this.uploadAllFiles();\r\n    }\r\n\r\n    uploadAllFiles = async () => {\r\n        const { selectedFiles } = this.state;\r\n        const allHashPromises = await selectedFiles.map(async (file) => {\r\n            const val = await this.uploadFileToIPFS(file.buffer);\r\n            return val;\r\n        });\r\n\r\n        const allHashes = await Promise.all(allHashPromises)\r\n        this.setState({\r\n            loadingBackdropTitle: \"Processing your transaction\",\r\n            selectedFilesIPFSPath: [...this.state.selectedFilesIPFSPath, allHashes]\r\n        }, this.saveContract);\r\n    }\r\n\r\n    uploadFileToIPFS = async (file) => {\r\n        try {\r\n            let results = await IPFS.add(file.buffer);\r\n            return results['path'];\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    saveContract = async () => {\r\n        const { account, contract, address, availableFrom, area, flatType, furnishing, deposit, rent, ownerContact, selectedFilesIPFSPath } = this.state;\r\n        const date = new Date(availableFrom).getTime();\r\n        console.log(date);\r\n        const { web3 } = this.props;\r\n\r\n        try {\r\n            const response = await contract.methods.rentOutproperty(\r\n                `${address};${ownerContact}`,\r\n                area, this.getFurnishing(furnishing),\r\n                date, this.getFlatType(flatType),\r\n                rent, deposit,\r\n                selectedFilesIPFSPath.join(\",\")\r\n            )\r\n                .send({ from: account });\r\n\r\n            console.log(response);\r\n            console.log(this.state);\r\n            this.setState({ transactionMessage: `Success! \\n  TxHash:${response.transactionHash}` });\r\n        } catch (error) {\r\n            this.setState({ transactionMessage: `Failed!` });\r\n            console.error(error);\r\n        }\r\n\r\n        this.setInitialState();\r\n    }\r\n\r\n    render() {\r\n\r\n        const { selectedFiles } = this.state;\r\n\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid bg-transparent m-0\">\r\n                <div className=\"container container-fluid p-5\">\r\n                    <header className=\"section-heading\">\r\n                        <h1 className=\"section-title text-center\">Rent out...</h1>\r\n                    </header>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-7\">\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <h3>\r\n                                    <small className=\"text-muted\">Property Details</small>\r\n                                </h3>\r\n                                <hr />\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"col-md-6 mb-3\">\r\n                                        <label htmlFor=\"inputFirstName\">Flat Type</label>\r\n                                        <select id=\"inputBG\" className=\"form-control\"\r\n                                            value={this.state.flatType} onChange={(e) => { this.setState({ flatType: e.target.value }) }}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\" disabled></option>\r\n                                            <option value=\"1RK\">1 RK</option>\r\n                                            <option value=\"1BHK\">1 BHK</option>\r\n                                            <option value=\"2BHK\">2 BHK</option>\r\n                                            <option value=\"3BHK\">3 BHK</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 mb-3\">\r\n                                        <label htmlFor=\"inputLastName\">Furnishing</label>\r\n                                        <select id=\"inputBG\" className=\"form-control\"\r\n                                            value={this.state.furnishing} onChange={(e) => { this.setState({ furnishing: e.target.value }) }}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\" disabled></option>\r\n                                            <option value=\"FullyFurnished\">Fully Furnished</option>\r\n                                            <option value=\"SemiFurnished\">Semi Furnished</option>\r\n                                            <option value=\"None\">None</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"col-md-6 mb-3\">\r\n                                        <label htmlFor=\"inputUID\">Address</label>\r\n                                        <textarea type=\"text\" className=\"form-control\" rows=\"3\" style={{ overflow: 'auto', resize: 'none' }}\r\n                                            value={this.state.address} onChange={(e) => { this.setState({ address: e.target.value }) }}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-md-6 mb-3\">\r\n                                        <label htmlFor=\"inputGender\">Area</label>\r\n                                        <input type=\"number\" min=\"1\" className=\"form-control\"\r\n                                            value={this.state.area} onChange={(e) => { this.setState({ area: e.target.value }) }}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"col-md-6 mb-3\">\r\n                                        <label htmlFor=\"inputDOB\">Available From</label>\r\n                                        <input type=\"date\" className=\"form-control\"\r\n                                            value={this.state.availableFrom} onChange={(e) => { this.setState({ availableFrom: e.target.value }) }}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-md-6 mb-3\">\r\n                                        <label htmlFor=\"inputDOB\">Contact</label>\r\n                                        <input type=\"text\" className=\"form-control\"\r\n                                            value={this.state.ownerContact}\r\n                                            onChange={this.validatePhone}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <h3>\r\n                                    <small className=\"text-muted\">Expenses</small>\r\n                                </h3>\r\n                                <hr />\r\n\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"col-md-6 mb-3\">\r\n                                        <label htmlFor=\"inputState\">Rent</label>\r\n                                        <div className=\"input-group mb-2\">\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text\">$</div>\r\n                                            </div>\r\n                                            <input type=\"number\" min=\"0\" className=\"form-control\"\r\n                                                value={this.state.rent} onChange={(e) => { this.setState({ rent: e.target.value }) }}\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 mb-3\">\r\n                                        <label htmlFor=\"inputCity\">Security Deposit</label>\r\n                                        <div className=\"input-group mb-2\">\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text\">$</div>\r\n                                            </div>\r\n                                            <input type=\"number\" min=\"0\" className=\"form-control\"\r\n                                                value={this.state.deposit} onChange={(e) => { this.setState({ deposit: e.target.value }) }}\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <h3>\r\n                                    <small className=\"text-muted\">Property Images</small>\r\n                                </h3>\r\n                                <hr />\r\n\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"col-md-6 mb-3\">\r\n                                        <label htmlFor=\"inputReportFile\">Upload</label>\r\n                                        <input type=\"file\" className=\"form-control-file\" multiple=\"multiple\" accept=\"image/x-png,image/gif,image/jpeg\"\r\n                                            onChange={this.onFileSelection}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <div className=\"row\">\r\n                                            {\r\n                                                selectedFiles.map((item, key) => {\r\n                                                    return <img key={key} src={URL.createObjectURL(item.file)} alt=\"...\" className=\"img-thumbnail img-thumbnail-custom rounded\" />\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-md-6 mb-3\">\r\n                                    <label htmlFor=\"emptyLabel\"></label>\r\n                                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Register</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal\r\n                    show={this.state.showLoadingBackdrop}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{this.state.loadingBackdropTitle}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <div className=\"spinner-grow\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    show={this.state.showSuccessBackdrop}\r\n                    onHide={() => this.setState({ showSuccessBackdrop: false })}\r\n                    centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Message </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {this.state.transactionMessage}\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const IPFS = require('ipfs-http-client');\r\n\r\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\r\n\r\nexport default ipfs;","module.exports = __webpack_public_path__ + \"static/media/dstays2.46c9e478.png\";","exports.getFurnishing = function (furnishing) {\r\n    if (furnishing === \"0\") {\r\n        return \"Un-furnished\";\r\n    }\r\n    else if (furnishing === \"1\") {\r\n        return \"Semi-furnished\";\r\n    }\r\n    else {\r\n        return \"Full-furnished\";\r\n    }\r\n}\r\n\r\nexports.getFlatType = function (flatType) {\r\n    if (flatType === \"0\") {\r\n        return \"1RK\";\r\n    }\r\n    else if (flatType === \"1\") {\r\n        return \"1BHK\";\r\n    }\r\n    else if (flatType === \"2\") {\r\n        return \"2BHK\";\r\n    }\r\n    else {\r\n        return \"3BHK\";\r\n    }\r\n}\r\n\r\nexports.getDateFromEpoch = function (epoch) {\r\n    if (epoch === undefined) {\r\n        return \"\"\r\n    }\r\n    const newDate = new Date(0);\r\n    newDate.setUTCMilliseconds(epoch);\r\n    return newDate.toDateString();\r\n}\r\n\r\nexports.monthDiff = (checkOut, checkIn) => {\r\n    var months;\r\n    let d1 = new Date(checkOut);\r\n    let d2 = new Date(checkIn);\r\n    months = (d2.getFullYear() - d1.getFullYear()) * 12;\r\n    months -= d1.getMonth();\r\n    months += d2.getMonth();\r\n    return months <= 0 ? 0 : months;\r\n}"],"sourceRoot":""}